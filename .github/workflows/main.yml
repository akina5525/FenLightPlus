name: Package Kodi Addon

on:
  push:
    branches:
      - main

jobs:
  build-zip:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Read current version
        id: get_version
        run: |
          VERSION=$(cat packages/fen_light_version)
          echo "CURRENT_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Bump patch version and update files
        id: bump_version
        run: |
          # Split version
          IFS='.' read -r MAJOR MINOR PATCH <<< "${CURRENT_VERSION}"
          PATCH=$((PATCH + 1))
          NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

          # Update version file
          echo "$NEW_VERSION" > packages/fen_light_version

          # Update version in addon.xml
          sed -i "s/version=\"[^\"]*\"/version=\"$NEW_VERSION\"/" plugin.video.fenlight/addon.xml

          # Get last commit message
          COMMIT_MSG=$(git log -1 --pretty=%B)

          # Prepend to changelog
          CHANGELOG="plugin.video.fenlight/resources/text/changelog.txt"
          echo "[B]Version $NEW_VERSION[/B] - $(date +'%Y-%m-%d')" > tmp_changelog
          echo "- $COMMIT_MSG" >> tmp_changelog
          echo >> tmp_changelog
          cat "$CHANGELOG" >> tmp_changelog
          mv tmp_changelog "$CHANGELOG"

      - name: Create packages directory if not exists
        run: mkdir -p packages

      - name: Zip the addon
        run: |
          zip -r "packages/plugin.video.fenlight-${NEW_VERSION}.zip" plugin.video.fenlight

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add packages/fen_light_version \
                  plugin.video.fenlight/addon.xml \
                  plugin.video.fenlight/resources/text/changelog.txt \
                  "packages/plugin.video.fenlight-${NEW_VERSION}.zip"
          git commit -m "Release version ${NEW_VERSION}: $COMMIT_MSG [skip ci]" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
